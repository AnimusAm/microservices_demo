# Cloud Config Server App properties
---
server:
  port: 8888
spring:
  cloud:
    config:
      server:
        git:
          uri: https://github.com/AnimusAm/demo_config.git
# This configuration with remote repository works - client gets property source based on config file placed in this repository
#   But, what I didn't manage to do is:
#     - define subfolder in which config files will be stored (so that client could reach it successfully)
#     - define this repo as one of the repos (with pseudo name) that by pattern could 'collect' all requests of the applications that contain 'client' in their name
#       - the idea was to define repo with name 'demo' that by URI is pointed to this same repo, and to define pattern '*client*/*' that would allow any client application with name that contains 'client' and regardless of profile, to use this repo
#         - but that didn't quite work




# For native profile (meaning holding environment repository locally)
---
profiles:
  active: native

cloud:
  config:
    server:
      # "native" is used when the native profile is active, for local tests with a classpath repo:
      native:
        searchLocations: classpath:offline-repository/